// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PJS.Infrastructure.Data.Context;

#nullable disable

namespace PJS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250527214522_InserindoTabelaNiveisConquistas")]
    partial class InserindoTabelaNiveisConquistas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PJS.Domain.Entities._Assoc._ConquistaPerfilAssoc.ConquistaPerfilAssocEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ConquistaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConquistaId");

                    b.HasIndex("PerfilId");

                    b.ToTable("ConquistasPerfisAssoc");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Conquista.ConquistaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("XpBonus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Conquistas");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Evento.EventoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataExecucao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RotinaId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RotinaId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Nivel.NivelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Nivel")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeXp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Niveis");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Perfil.PerfilEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("text");

                    b.Property<Guid>("NivelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Rotina.RotinaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Periodicidade")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Rotinas");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Tarefas.TarefaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoriaTarefa")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Dificuldade")
                        .HasColumnType("integer");

                    b.Property<int>("NivelConhecimento")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RotinaId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("TempoEstimado")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("RotinaId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Usuario.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Assoc._ConquistaPerfilAssoc.ConquistaPerfilAssocEntity", b =>
                {
                    b.HasOne("PJS.Domain.Entities._Conquista.ConquistaEntity", "Conquista")
                        .WithMany("Perfis")
                        .HasForeignKey("ConquistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PJS.Domain.Entities._Perfil.PerfilEntity", "Perfil")
                        .WithMany("Conquistas")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conquista");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Evento.EventoEntity", b =>
                {
                    b.HasOne("PJS.Domain.Entities._Rotina.RotinaEntity", "Rotina")
                        .WithMany("Eventos")
                        .HasForeignKey("RotinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rotina");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Perfil.PerfilEntity", b =>
                {
                    b.HasOne("PJS.Domain.Entities._Nivel.NivelEntity", "Nivel")
                        .WithMany()
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PJS.Domain.Entities._Usuario.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Tarefas.TarefaEntity", b =>
                {
                    b.HasOne("PJS.Domain.Entities._Perfil.PerfilEntity", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PJS.Domain.Entities._Rotina.RotinaEntity", "Rotina")
                        .WithMany()
                        .HasForeignKey("RotinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Rotina");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Conquista.ConquistaEntity", b =>
                {
                    b.Navigation("Perfis");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Perfil.PerfilEntity", b =>
                {
                    b.Navigation("Conquistas");
                });

            modelBuilder.Entity("PJS.Domain.Entities._Rotina.RotinaEntity", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
